version: "3.8"

services:
  # TryTraGo Application
  trytrago:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: dev
        COMMIT_SHA: local
        BUILD_TIME: ${BUILD_TIME:-2023-01-01T00:00:00Z}
    ports:
      - "8080:8080"
    volumes:
      - ./config.yaml:/etc/trytrago/config.yaml
      - ./migrations:/etc/trytrago/migrations
      - trytrago-data:/data/trytrago
    environment:
      - TRYTRAGO_DATABASE_HOST=postgres
      - TRYTRAGO_DATABASE_PORT=5432
      - TRYTRAGO_DATABASE_USER=postgres
      - TRYTRAGO_DATABASE_PASSWORD=postgres
      - TRYTRAGO_DATABASE_NAME=trytrago
      - TRYTRAGO_CACHE_ADDRESS=redis:6379
      - TRYTRAGO_ENVIRONMENT=development
      - TRYTRAGO_LOGGING_LEVEL=debug
      - TRYTRAGO_LOGGING_FORMAT=console
    depends_on:
      - postgres
      - redis
    networks:
      - trytrago-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=trytrago
    networks:
      - trytrago-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - trytrago-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer for database management (optional, development only)
  adminer:
    image: adminer
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - trytrago-network
    restart: unless-stopped
    profiles:
      - dev

volumes:
  postgres-data:
  redis-data:
  trytrago-data:

networks:
  trytrago-network:
    driver: bridge
